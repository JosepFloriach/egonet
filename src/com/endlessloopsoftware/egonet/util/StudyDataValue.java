/*
 * Generated by XDoclet - Do not edit!
 */
package com.endlessloopsoftware.egonet.util;

import java.util.Set;

/**
 * Value object for StudyEJB.
 *
 * @xdoclet-generated at ${TODAY}
 * @copyright 2004 Endless Loop Software
 *  Inc.
 */
public class StudyDataValue
   extends java.lang.Object
   implements java.io.Serializable 
{
   private java.lang.Long id;
   private boolean idHasBeenSet = false;
   private int numAlters;
   private boolean numAltersHasBeenSet = false;
   private java.lang.String studyName;
   private boolean studyNameHasBeenSet = false;
   private java.lang.Long[][] questionOrder;
   private boolean questionOrderHasBeenSet = false;
   private java.lang.String UIType;
   private boolean UITypeHasBeenSet = false;
   private Set InterviewDataValues = new java.util.HashSet();
   private Set QuestionDataValues = new java.util.HashSet();

   private com.endlessloopsoftware.egonet.interfaces.StudyEJBPK pk;

   public StudyDataValue()
   {
     id = new Long(System.currentTimeMillis());
     pk = new com.endlessloopsoftware.egonet.interfaces.StudyEJBPK(id);
   }

   public StudyDataValue( java.lang.Long id,int numAlters,java.lang.String studyName,java.lang.Long[][] questionOrder,java.lang.String UIType )
   {
	  this.id = id;
	  idHasBeenSet = true;
	  this.numAlters = numAlters;
	  numAltersHasBeenSet = true;
	  this.studyName = studyName;
	  studyNameHasBeenSet = true;
	  this.questionOrder = questionOrder;
	  questionOrderHasBeenSet = true;
	  this.UIType = UIType;
	  UITypeHasBeenSet = true;
	  pk = new com.endlessloopsoftware.egonet.interfaces.StudyEJBPK(this.getId());
   }

   //TODO Cloneable is better than this !
   public StudyDataValue( StudyDataValue otherValue )
   {
	  this.id = otherValue.id;
	  idHasBeenSet = true;
	  this.numAlters = otherValue.numAlters;
	  numAltersHasBeenSet = true;
	  this.studyName = otherValue.studyName;
	  studyNameHasBeenSet = true;
	  this.questionOrder = otherValue.questionOrder;
	  questionOrderHasBeenSet = true;
	  this.UIType = otherValue.UIType;
	  UITypeHasBeenSet = true;
	// TODO Clone is better no ?
	  this.InterviewDataValues = otherValue.InterviewDataValues;
	// TODO Clone is better no ?
	  this.QuestionDataValues = otherValue.QuestionDataValues;

	  pk = new com.endlessloopsoftware.egonet.interfaces.StudyEJBPK(this.getId());
   }

   public com.endlessloopsoftware.egonet.interfaces.StudyEJBPK getPrimaryKey()
   {
	  return pk;
   }

   public void setPrimaryKey( com.endlessloopsoftware.egonet.interfaces.StudyEJBPK pk )
   {
      // it's also nice to update PK object - just in case
      // somebody would ask for it later...
      this.pk = pk;
	  setId( pk.id );
   }

   public java.lang.Long getId()
   {
	  return this.id;
   }

   public void setId( java.lang.Long id )
   {
	  this.id = id;
	  idHasBeenSet = true;

		 pk.setId(id);
   }

   public boolean idHasBeenSet(){
	  return idHasBeenSet;
   }
   public int getNumAlters()
   {
	  return this.numAlters;
   }

   public void setNumAlters( int numAlters )
   {
	  this.numAlters = numAlters;
	  numAltersHasBeenSet = true;

   }

   public boolean numAltersHasBeenSet(){
	  return numAltersHasBeenSet;
   }
   public java.lang.String getStudyName()
   {
	  return this.studyName;
   }

   public void setStudyName( java.lang.String studyName )
   {
	  this.studyName = studyName;
	  studyNameHasBeenSet = true;

   }

   public boolean studyNameHasBeenSet(){
	  return studyNameHasBeenSet;
   }
   public java.lang.Long[][] getQuestionOrder()
   {
	  return this.questionOrder;
   }

   public void setQuestionOrder( java.lang.Long[][] questionOrder )
   {
	  this.questionOrder = questionOrder;
	  questionOrderHasBeenSet = true;

   }

   public boolean questionOrderHasBeenSet(){
	  return questionOrderHasBeenSet;
   }
   
   public java.lang.String getUIType()
   {
	  return this.UIType;
   }

   public void setUIType( String uiType )
   {
     this.UIType = uiType;
     UITypeHasBeenSet = true;

   }

   public boolean UITypeHasBeenSet(){
     return UITypeHasBeenSet;
   }
   
   protected Set addedInterviewDataValues = new java.util.HashSet();
   protected Set onceAddedInterviewDataValues = new java.util.HashSet();
   protected Set removedInterviewDataValues = new java.util.HashSet();
   protected Set updatedInterviewDataValues = new java.util.HashSet();

   public Set getAddedInterviewDataValues() { return addedInterviewDataValues; }
   public Set getOnceAddedInterviewDataValues() { return onceAddedInterviewDataValues; }
   public Set getRemovedInterviewDataValues() { return removedInterviewDataValues; }
   public Set getUpdatedInterviewDataValues() { return updatedInterviewDataValues; }

   public void setAddedInterviewDataValues(Set addedInterviewDataValues)
   {
      this.addedInterviewDataValues.clear();
      this.addedInterviewDataValues.addAll(addedInterviewDataValues);
   }

   public void setOnceAddedInterviewDataValues(Set onceAddedInterviewDataValues)
   {
      this.onceAddedInterviewDataValues.clear();
      this.onceAddedInterviewDataValues.addAll(onceAddedInterviewDataValues);
   }

   public void setRemovedInterviewDataValues(Set removedInterviewDataValues)
   {
      this.removedInterviewDataValues.clear();
      this.removedInterviewDataValues.addAll(removedInterviewDataValues);
   }

   public void setUpdatedInterviewDataValues(Set updatedInterviewDataValues)
   {
      this.updatedInterviewDataValues.clear();
      this.updatedInterviewDataValues.addAll(updatedInterviewDataValues);
   }

   public com.endlessloopsoftware.egonet.util.InterviewDataValue[] getInterviewDataValues()
   {
	  return (com.endlessloopsoftware.egonet.util.InterviewDataValue[])this.InterviewDataValues.toArray(new com.endlessloopsoftware.egonet.util.InterviewDataValue[InterviewDataValues.size()]);
   }

   public void setInterviewDataValues(com.endlessloopsoftware.egonet.util.InterviewDataValue[] InterviewDataValues)
   {
      this.InterviewDataValues.clear();
      for (int i=0; i < InterviewDataValues.length; i++)
      	this.InterviewDataValues.add(InterviewDataValues[i]);
   }

   public void clearInterviewDataValues()
   {
	  this.InterviewDataValues.clear();
   }

   public void addInterviewDataValue(com.endlessloopsoftware.egonet.util.InterviewDataValue added)
   {
	  this.InterviewDataValues.add(added);

      if (this.removedInterviewDataValues.contains(added))
      {
        this.removedInterviewDataValues.remove(added);
        if (this.onceAddedInterviewDataValues.contains(added))
        {
          if (! this.addedInterviewDataValues.contains(added))
            this.addedInterviewDataValues.add(added);
        }
        else if (! this.updatedInterviewDataValues.contains(added))
        {
            this.updatedInterviewDataValues.add(added);
        }
      }
      else
      {
        if (! this.onceAddedInterviewDataValues.contains(added))
          this.onceAddedInterviewDataValues.add(added);
        if (! this.addedInterviewDataValues.contains(added))
          this.addedInterviewDataValues.add(added);
      }
   }

   public void removeInterviewDataValue(com.endlessloopsoftware.egonet.util.InterviewDataValue removed)
   {
	  this.InterviewDataValues.remove(removed);

      if (this.addedInterviewDataValues.contains(removed))
        this.addedInterviewDataValues.remove(removed);
      else if (! this.removedInterviewDataValues.contains(removed))
        this.removedInterviewDataValues.add(removed);

	  if (this.updatedInterviewDataValues.contains(removed))
		 this.updatedInterviewDataValues.remove(removed);
   }

   public void updateInterviewDataValue(com.endlessloopsoftware.egonet.util.InterviewDataValue updated)
   {
	  if ( !this.updatedInterviewDataValues.contains(updated) && !this.addedInterviewDataValues.contains(updated))
		 this.updatedInterviewDataValues.add(updated);
      if (this.removedInterviewDataValues.contains(updated))
         this.removedInterviewDataValues.remove(updated);
   }

   public void cleanInterviewDataValue(){
	  this.addedInterviewDataValues = new java.util.HashSet();
      this.onceAddedInterviewDataValues = new java.util.HashSet();
	  this.removedInterviewDataValues = new java.util.HashSet();
	  this.updatedInterviewDataValues = new java.util.HashSet();
   }

   public void copyInterviewDataValuesFrom(com.endlessloopsoftware.egonet.util.StudyDataValue from)
   {
	  // TODO Clone the List ????
	  this.InterviewDataValues = from.InterviewDataValues;
   }
   protected Set addedQuestionDataValues = new java.util.HashSet();
   protected Set onceAddedQuestionDataValues = new java.util.HashSet();
   protected Set removedQuestionDataValues = new java.util.HashSet();
   protected Set updatedQuestionDataValues = new java.util.HashSet();

   public Set getAddedQuestionDataValues() { return addedQuestionDataValues; }
   public Set getOnceAddedQuestionDataValues() { return onceAddedQuestionDataValues; }
   public Set getRemovedQuestionDataValues() { return removedQuestionDataValues; }
   public Set getUpdatedQuestionDataValues() { return updatedQuestionDataValues; }

   public void setAddedQuestionDataValues(Set addedQuestionDataValues)
   {
      this.addedQuestionDataValues.clear();
      this.addedQuestionDataValues.addAll(addedQuestionDataValues);
   }

   public void setOnceAddedQuestionDataValues(Set onceAddedQuestionDataValues)
   {
      this.onceAddedQuestionDataValues.clear();
      this.onceAddedQuestionDataValues.addAll(onceAddedQuestionDataValues);
   }

   public void setRemovedQuestionDataValues(Set removedQuestionDataValues)
   {
      this.removedQuestionDataValues.clear();
      this.removedQuestionDataValues.addAll(removedQuestionDataValues);
   }

   public void setUpdatedQuestionDataValues(Set updatedQuestionDataValues)
   {
      this.updatedQuestionDataValues.clear();
      this.updatedQuestionDataValues.addAll(updatedQuestionDataValues);
   }

   public com.endlessloopsoftware.egonet.util.QuestionDataValue[] getQuestionDataValues()
   {
	  return (com.endlessloopsoftware.egonet.util.QuestionDataValue[])this.QuestionDataValues.toArray(new com.endlessloopsoftware.egonet.util.QuestionDataValue[QuestionDataValues.size()]);
   }

   public void setQuestionDataValues(com.endlessloopsoftware.egonet.util.QuestionDataValue[] QuestionDataValues)
   {
      this.QuestionDataValues.clear();
      for (int i=0; i < QuestionDataValues.length; i++)
      	this.QuestionDataValues.add(QuestionDataValues[i]);
   }

   public void clearQuestionDataValues()
   {
	  this.QuestionDataValues.clear();
   }

   public void addQuestionDataValue(com.endlessloopsoftware.egonet.util.QuestionDataValue added)
   {
	  this.QuestionDataValues.add(added);

      if (this.removedQuestionDataValues.contains(added))
      {
        this.removedQuestionDataValues.remove(added);
        if (this.onceAddedQuestionDataValues.contains(added))
        {
          if (! this.addedQuestionDataValues.contains(added))
            this.addedQuestionDataValues.add(added);
        }
        else if (! this.updatedQuestionDataValues.contains(added))
        {
            this.updatedQuestionDataValues.add(added);
        }
      }
      else
      {
        if (! this.onceAddedQuestionDataValues.contains(added))
          this.onceAddedQuestionDataValues.add(added);
        if (! this.addedQuestionDataValues.contains(added))
          this.addedQuestionDataValues.add(added);
      }
   }

   public void removeQuestionDataValue(com.endlessloopsoftware.egonet.util.QuestionDataValue removed)
   {
	  this.QuestionDataValues.remove(removed);

      if (this.addedQuestionDataValues.contains(removed))
        this.addedQuestionDataValues.remove(removed);
      else if (! this.removedQuestionDataValues.contains(removed))
        this.removedQuestionDataValues.add(removed);

	  if (this.updatedQuestionDataValues.contains(removed))
		 this.updatedQuestionDataValues.remove(removed);
   }

   public void updateQuestionDataValue(com.endlessloopsoftware.egonet.util.QuestionDataValue updated)
   {
	  if ( !this.updatedQuestionDataValues.contains(updated) && !this.addedQuestionDataValues.contains(updated))
		 this.updatedQuestionDataValues.add(updated);
      if (this.removedQuestionDataValues.contains(updated))
         this.removedQuestionDataValues.remove(updated);
   }

   public void cleanQuestionDataValue(){
	  this.addedQuestionDataValues = new java.util.HashSet();
      this.onceAddedQuestionDataValues = new java.util.HashSet();
	  this.removedQuestionDataValues = new java.util.HashSet();
	  this.updatedQuestionDataValues = new java.util.HashSet();
   }

   public void copyQuestionDataValuesFrom(com.endlessloopsoftware.egonet.util.StudyDataValue from)
   {
	  // TODO Clone the List ????
	  this.QuestionDataValues = from.QuestionDataValues;
   }

   public String toString()
   {
	  StringBuffer str = new StringBuffer("{");

	  str.append("id=" + getId() + " " + "numAlters=" + getNumAlters() + " " + "studyName=" + getStudyName() + " " + "questionOrder=" + getQuestionOrder() + " " + "UIType=" + getUIType());
	  str.append('}');

	  return(str.toString());
   }

   /**
    * A Value Object has an identity if the attributes making its Primary Key have all been set. An object without identity is never equal to any other object.
    *
    * @return true if this instance has an identity.
    */
   protected boolean hasIdentity()
   {
	  boolean ret = true;
	  ret = ret && idHasBeenSet;
	  return ret;
   }

   public boolean equals(Object other)
   {
      if (this == other)
         return true;
	  if ( ! hasIdentity() ) return false;
	  if (other instanceof StudyDataValue)
	  {
		 StudyDataValue that = (StudyDataValue) other;
		 if ( ! that.hasIdentity() ) return false;
		 boolean lEquals = true;
		 if( this.id == null )
		 {
			lEquals = lEquals && ( that.id == null );
		 }
		 else
		 {
			lEquals = lEquals && this.id.equals( that.id );
		 }

		 lEquals = lEquals && isIdentical(that);

		 return lEquals;
	  }
	  else
	  {
		 return false;
	  }
   }

   public boolean isIdentical(Object other)
   {
	  if (other instanceof StudyDataValue)
	  {
		 StudyDataValue that = (StudyDataValue) other;
		 boolean lEquals = true;
		 lEquals = lEquals && this.numAlters == that.numAlters;
		 if( this.studyName == null )
		 {
			lEquals = lEquals && ( that.studyName == null );
		 }
		 else
		 {
			lEquals = lEquals && this.studyName.equals( that.studyName );
		 }
		 if( this.questionOrder == null )
		 {
			lEquals = lEquals && ( that.questionOrder == null );
		 }
		 else
		 {
			lEquals = lEquals && this.questionOrder.equals( that.questionOrder );
		 }
		 if( this.UIType == null )
		 {
			lEquals = lEquals && ( that.UIType == null );
		 }
		 else
		 {
			lEquals = lEquals && this.UIType.equals( that.UIType );
		 }
		 if( this.getInterviewDataValues() == null )
		 {
			lEquals = lEquals && ( that.getInterviewDataValues() == null );
		 }
		 else
		 {
			lEquals = lEquals && java.util.Arrays.equals(this.getInterviewDataValues() , that.getInterviewDataValues()) ;
		 }
		 if( this.getQuestionDataValues() == null )
		 {
			lEquals = lEquals && ( that.getQuestionDataValues() == null );
		 }
		 else
		 {
			lEquals = lEquals && java.util.Arrays.equals(this.getQuestionDataValues() , that.getQuestionDataValues()) ;
		 }

		 return lEquals;
	  }
	  else
	  {
		 return false;
	  }
   }

   public int hashCode(){
	  int result = 17;
      result = 37*result + ((this.id != null) ? this.id.hashCode() : 0);

      result = 37*result + (int) numAlters;

      result = 37*result + ((this.studyName != null) ? this.studyName.hashCode() : 0);

      result = 37*result + ((this.questionOrder != null) ? this.questionOrder.hashCode() : 0);

      result = 37*result + ((this.UIType != null) ? this.UIType.hashCode() : 0);

	  result = 37*result + ((this.getInterviewDataValues() != null) ? this.getInterviewDataValues().hashCode() : 0);
	  result = 37*result + ((this.getQuestionDataValues() != null) ? this.getQuestionDataValues().hashCode() : 0);
	  return result;
   }

}
